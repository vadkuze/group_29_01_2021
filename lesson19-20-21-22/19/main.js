// fetch


// Многие годы скрипт с одного сайта не мог получить доступ к содержимому другого сайта.




// Есть два вида запросов на другой источник:

// Простые.
// Все остальные.
// Простые запросы будут попроще, поэтому давайте начнём с них.

// Простой запрос – это запрос, удовлетворяющий следующим условиям:

// Простой метод: GET, POST или HEAD
// Простые заголовки – разрешены только:
// Accept,
// Accept-Language,
// Content-Language,
// Content-Type со значением application/x-www-form-urlencoded, multipart/form-data или text/plain.


// CORS для простых запросов
// 1 Он гарантирует, что к запросу на другой источник добавляется правильный заголовок Origin.
// 2 Он проверяет наличие разрешающего заголовка Access-Control-Allow-Origin в ответе и, если всё хорошо, то JavaScript получает доступ к ответу сервера, в противном случае – доступ запрещается с ошибкой.



// Мы можем использовать любой HTTP-метод: не только GET/POST, но и PATCH, DELETE и другие.
// браузер не делает «непростые» запросы (которые нельзя было сделать в прошлом) сразу. Перед этим он посылает предварительный запрос, спрашивая разрешения.
// Предварительный запрос использует метод OPTIONS, у него нет тела, но есть два заголовка:

// Access-Control-Request-Method содержит HTTP-метод «непростого» запроса.
// Access-Control-Request-Headers предоставляет разделённый запятыми список его «непростых» HTTP-заголовков.
// Если сервер согласен принимать такие запросы, то он должен ответить без тела, со статусом 200 и с заголовками:

// Access-Control-Allow-Methods должен содержать разрешённые методы.
// Access-Control-Allow-Headers должен содержать список разрешённых заголовков.
// Кроме того, заголовок Access-Control-Max-Age может указывать количество секунд, на которое нужно кешировать разрешения. Так что браузеру не придётся посылать предзапрос для последующих запросов, удовлетворяющих данным разрешениям.
